{"ast":null,"code":"var _jsxFileName = \"/home/ashish/ALL DATA/REACTJS_ALL_PROJECTS/Yt-Downloader/youtubedownloader/src/Mycomponants/TodoItempart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoItempart(_ref) {\n  let {\n    newDescription,\n    newJson\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"headings\",\n      children: newDescription.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Quality: \", newJson.quality, \" (video:pixels/audio:kbps)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Duration: \", newDescription.duration]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 125\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Type: \", newJson.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      width: \"240\",\n      controls: true,\n      poster: newDescription.thumb,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: newJson.url,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this), \"Sorry, your browser doesn't support embedded videos, but don't worry, you can\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: newDescription.url,\n        children: \"download the MP4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), \"and watch it with your favorite video player!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = TodoItempart;\nvar _c;\n$RefreshReg$(_c, \"TodoItempart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItempart","_ref","newDescription","newJson","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","quality","duration","type","width","controls","poster","thumb","src","url","href","_c","$RefreshReg$"],"sources":["/home/ashish/ALL DATA/REACTJS_ALL_PROJECTS/Yt-Downloader/youtubedownloader/src/Mycomponants/TodoItempart.js"],"sourcesContent":["import React from 'react';\n\nexport default function TodoItempart({newDescription,newJson}) { \n    return(\n        <>\n            <h6 className=\"headings\">{newDescription.title}</h6><p> Quality: {newJson.quality} (video:pixels/audio:kbps)</p><p>Duration: {newDescription.duration}</p>\n            <p>Type: {newJson.type}</p>\n            {/*\n      <video width=\"480\" controls className='container my-3'>\n        <source src={JSON.parse(props.todo.Description).url} type=\"video/mp4\" />\n        <p>\n          Your browser doesn't support HTML video. Here is a\n          <a href={JSON.parse(props.todo.Description).url}>link to the video</a> instead.\n        </p>\n      </video>\n      */}\n            <video\n              width=\"240\"\n              controls\n              poster={newDescription.thumb}>\n              <source\n                src={newJson.url}\n                type=\"video/mp4\" />\n\n              Sorry, your browser doesn't support embedded videos, but don't worry, you can\n              <a href={newDescription.url}>\n                download the MP4\n              </a>\n              and watch it with your favorite video player!\n            </video>\n            <hr />\n            </>\n                )\n                \n            }\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAA2B;EAAA,IAA1B;IAACC,cAAc;IAACC;EAAO,CAAC,GAAAF,IAAA;EACzD,oBACIJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACIP,OAAA;MAAIQ,SAAS,EAAC,UAAU;MAAAD,QAAA,EAAEF,cAAc,CAACI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAAAb,OAAA;MAAAO,QAAA,GAAG,YAAU,EAACD,OAAO,CAACQ,OAAO,EAAC,4BAA0B;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAAAb,OAAA;MAAAO,QAAA,GAAG,YAAU,EAACF,cAAc,CAACU,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC1Jb,OAAA;MAAAO,QAAA,GAAG,QAAM,EAACD,OAAO,CAACU,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAU3Bb,OAAA;MACEiB,KAAK,EAAC,KAAK;MACXC,QAAQ;MACRC,MAAM,EAAEd,cAAc,CAACe,KAAM;MAAAb,QAAA,gBAC7BP,OAAA;QACEqB,GAAG,EAAEf,OAAO,CAACgB,GAAI;QACjBN,IAAI,EAAC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,iFAGrB,eAAAb,OAAA;QAAGuB,IAAI,EAAElB,cAAc,CAACiB,GAAI;QAAAf,QAAA,EAAC;MAE7B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,iDAEN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACRb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,gBACH;AAGH;AAACW,EAAA,GAhCWrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}