{"ast":null,"code":"var _jsxFileName = \"/home/ashish/ALL DATA/REACTJS_ALL_PROJECTS/Yt-Downloader/src/Mycomponants/TodoItem.js\";\nimport React from 'react';\nimport TodoItempart from '../Mycomponants/TodoItempart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoList(props) {\n  let newDescription;\n  let newList;\n  let catchError = '';\n  try {\n    newDescription = JSON.parse(props.todo.Description);\n    newList = newDescription.list;\n  } catch {\n    catchError = 'Error';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    children: catchError.includes('Error') ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: props.todo.Description.includes('Loading Please wait..') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 124\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-secondary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-success\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-danger\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-warning\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-info\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-light\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-dark\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true) : props.todo.Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 37\n    }, this) : newList.map(newJson => {\n      return /*#__PURE__*/_jsxDEV(TodoItempart, {\n        newJson: newJson,\n        newDescription: newDescription\n      }, newList.indexOf(newJson), false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","TodoItempart","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","props","newDescription","newList","catchError","JSON","parse","todo","Description","list","className","children","includes","role","fileName","_jsxFileName","lineNumber","columnNumber","map","newJson","indexOf","_c","$RefreshReg$"],"sources":["/home/ashish/ALL DATA/REACTJS_ALL_PROJECTS/Yt-Downloader/src/Mycomponants/TodoItem.js"],"sourcesContent":["import React from 'react';\nimport TodoItempart from '../Mycomponants/TodoItempart';\n\nexport default function TodoList(props) {\n  let newDescription;\n  let newList;\n  let catchError='';\n\n  try{\n  newDescription = JSON.parse(props.todo.Description);\n  newList = newDescription.list;\n  }\n  catch{\n    catchError='Error'\n  }\n  return (\n    <div className='container my-3'>\n      {catchError.includes('Error')?<div className='container'>{props.todo.Description.includes('Loading Please wait..')?<><div className=\"spinner-grow text-primary\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n<div className=\"spinner-grow text-secondary\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n<div className=\"spinner-grow text-success\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n<div className=\"spinner-grow text-danger\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n<div className=\"spinner-grow text-warning\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n<div className=\"spinner-grow text-info\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n<div className=\"spinner-grow text-light\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n<div className=\"spinner-grow text-dark\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div></>:props.todo.Description}</div>:newList.map((newJson) => {\n        return (\n          <TodoItempart key={newList.indexOf(newJson)} newJson={newJson}  newDescription={newDescription}/>\n        )\n      })}\n\n    </div>\n  )\n\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EACtC,IAAIC,cAAc;EAClB,IAAIC,OAAO;EACX,IAAIC,UAAU,GAAC,EAAE;EAEjB,IAAG;IACHF,cAAc,GAAGG,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,IAAI,CAACC,WAAW,CAAC;IACnDL,OAAO,GAAGD,cAAc,CAACO,IAAI;EAC7B,CAAC,CACD,MAAK;IACHL,UAAU,GAAC,OAAO;EACpB;EACA,oBACEP,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BP,UAAU,CAACQ,QAAQ,CAAC,OAAO,CAAC,gBAACf,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEV,KAAK,CAACM,IAAI,CAACC,WAAW,CAACI,QAAQ,CAAC,uBAAuB,CAAC,gBAACf,OAAA,CAAAE,SAAA;QAAAY,QAAA,gBAAEd,OAAA;UAAKa,SAAS,EAAC,2BAA2B;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACjLd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,eACNpB,OAAA;UAAKa,SAAS,EAAC,6BAA6B;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACxDd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,eACNpB,OAAA;UAAKa,SAAS,EAAC,2BAA2B;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACtDd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,eACNpB,OAAA;UAAKa,SAAS,EAAC,0BAA0B;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACrDd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,eACNpB,OAAA;UAAKa,SAAS,EAAC,2BAA2B;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACtDd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,eACNpB,OAAA;UAAKa,SAAS,EAAC,wBAAwB;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACnDd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,eACNpB,OAAA;UAAKa,SAAS,EAAC,yBAAyB;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACpDd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,eACNpB,OAAA;UAAKa,SAAS,EAAC,wBAAwB;UAACG,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACnDd,OAAA;YAAMa,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B;MAAA,gBAAG,GAAChB,KAAK,CAACM,IAAI,CAACC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,GAACd,OAAO,CAACe,GAAG,CAAEC,OAAO,IAAK;MACzD,oBACEtB,OAAA,CAACF,YAAY;QAAgCwB,OAAO,EAAEA,OAAQ;QAAEjB,cAAc,EAAEA;MAAe,GAA5EC,OAAO,CAACiB,OAAO,CAACD,OAAO,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAsD;IAErG,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAGV;AAACI,EAAA,GA9CuBrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}